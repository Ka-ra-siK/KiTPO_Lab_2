[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\polka\AppData\Local\Temp\idea10.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\polka\AppData\Local\Temp\idea10.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 175.525ms
[debug]       Load.loadUnit: defsScala took 0.3855ms
[debug] [Loading] Scanning directory C:\Users\polka\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\polka\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 38.9921 ms
[debug]           Load.resolveProject(global-plugins) took 85.9903ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\polka\.sbt\1.0\plugins, plugins: List(<none>))) took 167.6735ms
[debug] [Loading] Done in C:\Users\polka\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 216.547ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2749ms
[debug]     Load.loadUnit(file:/C:/Users/polka/.sbt/1.0/plugins/, ...) took 407.5649ms
[debug]   Load.apply: load took 749.8054ms
[debug]   Load.apply: resolveProjects took 11.3118ms
[debug]   Load.apply: finalTransforms took 104.3436ms
[debug]   Load.apply: config.delegates took 11.1799ms
[debug]   Load.apply: Def.make(settings)... took 487.19ms
[debug]   Load.apply: structureIndex took 115.9343ms
[debug]   Load.apply: mkStreams took 2.7351ms
[info] loading global plugins from C:\Users\polka\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3099.0919ms
[debug]           Load.loadUnit: plugins took 35.3924ms
[debug]           Load.loadUnit: defsScala took 0.0062ms
[debug] [Loading] Scanning directory C:\Config\Scala\Lab_2_Scala\project
[debug]             Load.loadUnit: mkEval took 8.5439ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Config\Scala\Lab_2_Scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.5859 ms
[info] loading settings for project lab_2_scala-build from idea10.sbt ...
[debug]               Load.resolveProject(lab_2_scala-build) took 12.0099ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab_2_scala-build, base: C:\Config\Scala\Lab_2_Scala\project, plugins: List(<none>))) took 15.3404ms
[debug] [Loading] Done in C:\Config\Scala\Lab_2_Scala\project, returning: (lab_2_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 206.6903ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.7993ms
[debug]         Load.loadUnit(file:/C:/Config/Scala/Lab_2_Scala/project/, ...) took 250.2137ms
[debug]       Load.apply: load took 253.2879ms
[debug]       Load.apply: resolveProjects took 0.1389ms
[debug]       Load.apply: finalTransforms took 13.7715ms
[debug]       Load.apply: config.delegates took 0.3995ms
[debug]       Load.apply: Def.make(settings)... took 115.8736ms
[debug]       Load.apply: structureIndex took 37.9419ms
[debug]       Load.apply: mkStreams took 0.0077ms
[info] loading project definition from C:\Config\Scala\Lab_2_Scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 811.9434ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\Config\Scala\Lab_2_Scala
[debug]       Load.loadUnit: mkEval took 0.4142ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.1025 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 35.0132ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Config\Scala\Lab_2_Scala, plugins: List(<none>))) took 40.4866ms
[debug] [Loading] Done in C:\Config\Scala\Lab_2_Scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 171.2695ms
[debug]     Load.loadUnit: cleanEvalClasses took 22.083ms
[debug]   Load.loadUnit(file:/C:/Config/Scala/Lab_2_Scala/, ...) took 1006.41ms
[debug] Load.apply: load took 1009.0884ms
[debug] Load.apply: resolveProjects took 0.1751ms
[debug] Load.apply: finalTransforms took 34.2897ms
[debug] Load.apply: config.delegates took 0.3688ms
[debug] Load.apply: Def.make(settings)... took 73.1092ms
[debug] Load.apply: structureIndex took 33.7059ms
[debug] Load.apply: mkStreams took 0.0027ms
[info] set current project to Lab_2_Scala (in build file:/C:/Config/Scala/Lab_2_Scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55336 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55336, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Lab_2_Scala (in build file:/C:/Config/Scala/Lab_2_Scala/)
[debug] > Exec(idea-shell, None, None)
