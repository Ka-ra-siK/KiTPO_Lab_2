[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\polka\AppData\Local\Temp\idea11.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\polka\AppData\Local\Temp\idea11.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 126.1474ms
[debug]       Load.loadUnit: defsScala took 0.3162ms
[debug] [Loading] Scanning directory C:\Users\polka\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\polka\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 62.4332 ms
[debug]           Load.resolveProject(global-plugins) took 77.3668ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\polka\.sbt\1.0\plugins, plugins: List(<none>))) took 181.5962ms
[debug] [Loading] Done in C:\Users\polka\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 225.1645ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4297ms
[debug]     Load.loadUnit(file:/C:/Users/polka/.sbt/1.0/plugins/, ...) took 364.359ms
[debug]   Load.apply: load took 688.8266ms
[debug]   Load.apply: resolveProjects took 7.9846ms
[debug]   Load.apply: finalTransforms took 78.0518ms
[debug]   Load.apply: config.delegates took 11.1558ms
[debug]   Load.apply: Def.make(settings)... took 839.1675ms
[debug]   Load.apply: structureIndex took 181.8921ms
[debug]   Load.apply: mkStreams took 2.334ms
[info] loading global plugins from C:\Users\polka\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3976.9238ms
[debug]           Load.loadUnit: plugins took 27.6794ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Config\Scala\Lab_2_Scala\project
[debug]             Load.loadUnit: mkEval took 5.2659ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Config\Scala\Lab_2_Scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.1444 ms
[info] loading settings for project lab_2_scala-build from idea11.sbt ...
[debug]               Load.resolveProject(lab_2_scala-build) took 3.3899ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab_2_scala-build, base: C:\Config\Scala\Lab_2_Scala\project, plugins: List(<none>))) took 7.3043ms
[debug] [Loading] Done in C:\Config\Scala\Lab_2_Scala\project, returning: (lab_2_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 167.3228ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.9243ms
[debug]         Load.loadUnit(file:/C:/Config/Scala/Lab_2_Scala/project/, ...) took 206.1002ms
[debug]       Load.apply: load took 209.0613ms
[debug]       Load.apply: resolveProjects took 0.3166ms
[debug]       Load.apply: finalTransforms took 24.9512ms
[debug]       Load.apply: config.delegates took 0.6759ms
[debug]       Load.apply: Def.make(settings)... took 122.1256ms
[debug]       Load.apply: structureIndex took 86.2046ms
[debug]       Load.apply: mkStreams took 0.0048ms
[info] loading project definition from C:\Config\Scala\Lab_2_Scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1662.4646ms
[debug]     Load.loadUnit: defsScala took 0.0086ms
[debug] [Loading] Scanning directory C:\Config\Scala\Lab_2_Scala
[debug]       Load.loadUnit: mkEval took 0.4755ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.6388 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 95.155ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Config\Scala\Lab_2_Scala, plugins: List(<none>))) took 102.6031ms
[debug] [Loading] Done in C:\Config\Scala\Lab_2_Scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 345.5672ms
[debug]     Load.loadUnit: cleanEvalClasses took 24.2202ms
[debug]   Load.loadUnit(file:/C:/Config/Scala/Lab_2_Scala/, ...) took 2033.6733ms
[debug] Load.apply: load took 2036.4909ms
[debug] Load.apply: resolveProjects took 0.1973ms
[debug] Load.apply: finalTransforms took 109.6649ms
[debug] Load.apply: config.delegates took 0.604ms
[debug] Load.apply: Def.make(settings)... took 309.9978ms
[debug] Load.apply: structureIndex took 59.1379ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to Lab_2_Scala (in build file:/C:/Config/Scala/Lab_2_Scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55336 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55336, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Lab_2_Scala (in build file:/C:/Config/Scala/Lab_2_Scala/)
[debug] > Exec(idea-shell, None, None)
