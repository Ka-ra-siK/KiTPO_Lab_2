[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 56.719ms
[debug]       Load.loadUnit: defsScala took 0.0056ms
[debug] [Loading] Scanning directory C:\Users\polka\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\polka\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.8147 ms
[debug]           Load.resolveProject(global-plugins) took 2.3417ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\polka\.sbt\1.0\plugins, plugins: List(<none>))) took 10.2363ms
[debug] [Loading] Done in C:\Users\polka\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 12.4549ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0607ms
[debug]     Load.loadUnit(file:/C:/Users/polka/.sbt/1.0/plugins/, ...) took 70.8873ms
[debug]   Load.apply: load took 74.6339ms
[debug]   Load.apply: resolveProjects took 0.2642ms
[debug]   Load.apply: finalTransforms took 18.3919ms
[debug]   Load.apply: config.delegates took 1.2013ms
[debug]   Load.apply: Def.make(settings)... took 225.8182ms
[debug]   Load.apply: structureIndex took 163.3589ms
[debug]   Load.apply: mkStreams took 0.0044ms
[info] loading global plugins from C:\Users\polka\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1326.5006ms
[debug]           Load.loadUnit: plugins took 59.1769ms
[debug]           Load.loadUnit: defsScala took 0.0051ms
[debug] [Loading] Scanning directory C:\Config\Scala\Lab_2_Scala\project
[debug]             Load.loadUnit: mkEval took 0.3886ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Config\Scala\Lab_2_Scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.4266 ms
[info] loading settings for project lab_2_scala-build from idea7.sbt ...
[debug]               Load.resolveProject(lab_2_scala-build) took 2.2361ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab_2_scala-build, base: C:\Config\Scala\Lab_2_Scala\project, plugins: List(<none>))) took 8.7559ms
[debug] [Loading] Done in C:\Config\Scala\Lab_2_Scala\project, returning: (lab_2_scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 59.1924ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.1199ms
[debug]         Load.loadUnit(file:/C:/Config/Scala/Lab_2_Scala/project/, ...) took 125.6391ms
[debug]       Load.apply: load took 127.9776ms
[debug]       Load.apply: resolveProjects took 0.1614ms
[debug]       Load.apply: finalTransforms took 24.892ms
[debug]       Load.apply: config.delegates took 0.4309ms
[debug]       Load.apply: Def.make(settings)... took 96.535ms
[debug]       Load.apply: structureIndex took 23.9962ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Config\Scala\Lab_2_Scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 637.6565ms
[debug]     Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\Config\Scala\Lab_2_Scala
[debug]       Load.loadUnit: mkEval took 0.311ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.8836 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 31.4569ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Config\Scala\Lab_2_Scala, plugins: List(<none>))) took 35.1412ms
[debug] [Loading] Done in C:\Config\Scala\Lab_2_Scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 127.3812ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.239ms
[debug]   Load.loadUnit(file:/C:/Config/Scala/Lab_2_Scala/, ...) took 781.2795ms
[debug] Load.apply: load took 783.3464ms
[debug] Load.apply: resolveProjects took 0.1484ms
[debug] Load.apply: finalTransforms took 12.9048ms
[debug] Load.apply: config.delegates took 0.3187ms
[debug] Load.apply: Def.make(settings)... took 50.2774ms
[debug] Load.apply: structureIndex took 15.3426ms
[debug] Load.apply: mkStreams took 0.0028ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to Lab_2_Scala (in build file:/C:/Config/Scala/Lab_2_Scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
